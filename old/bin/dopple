#!/usr/bin/env node

var fs = require("fs-extra");
var exec = require("child_process").exec;
var dopple = require("../lib/dopple.latest.js").dopple;

var sourceFilePath = process.argv[2] || "";
var targetFilePath = process.argv[3] || "app";

if(!sourceFilePath) {
	console.log("Error: No input files.");
	return;
}

var isWin = /^win/.test(process.platform);
if(isWin) {
	targetFilePath += ".exe";
}

function init()
{
	var output;

	if(getExt(sourceFilePath)) 
	{
		fs.readFile(sourceFilePath, function(err, buffer) 
		{
			if(err) { throw err; }
			var source = buffer.toSTRING_PURE();
			output = dopple.compile(source);
			if(output) {
				save(output);
			}
		});
	}
	else {
		output = dopple.compile(sourceFilePath);
		if(output) {
			save(output);
		}
	}
};

function save(output) 
{
	// Remove executable:
	fs.remove(targetFilePath, function(err) 
	{
		if(err) { throw err; }

		// Remove "dopple" folder:
		fs.remove("dopple", function(err) 
		{
			if(err) { throw err; }

			// Create "dopple" folder:
			fs.mkdirs("dopple", function(err) 
			{
				if(err) { throw err; }

				// Copy library:
				fs.copy(require("path").dirname(require.main.filename) + "/../lib/dopple.h", "dopple/dopple.h", function(err) 
				{
					if(err) { throw err; }

					fs.writeFile("dopple/app.c", output, function(err) {
						if(err) { throw err; }
						compile();
					});		
				});
			});
		});
	});
};

function compile()
{
	exec("gcc dopple/app.c -o " + targetFilePath, function() 
	{
		if(!isWin) 
		{
			exec("./" + targetFilePath, function(err, data) {
				console.log(data);
			});
		}
		else 
		{
			exec(targetFilePath, function(err, data) {
				console.log(data);
			});			
		}
	});
};

function help()
{
	
};

function getExt(source) 
{
	var re = /(?:\.([^.]+))?$/;	
	var output = re.exec(source)[0];
	if(!output) {
		return null;
	}

	return output;
};

try {
	init();
}
catch(str) {
	console.log(str);
}
